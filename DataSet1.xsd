<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="bibliothequeConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="bibliothequeConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.bibliothèque001.Properties.Settings.GlobalReference.Default.bibliothequeConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="utilisateursTableAdapter" GeneratorDataComponentClassName="utilisateursTableAdapter" Name="utilisateurs" UserDataComponentName="utilisateursTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bibliothequeConnectionString (Settings)" DbObjectName="bibliotheque.dbo.utilisateurs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[utilisateurs] WHERE (([numUser] = @Original_numUser) AND ([pseudo] = @Original_pseudo) AND ([password] = @Original_password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_numUser" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="numUser" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_pseudo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pseudo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[utilisateurs] ([pseudo], [password]) VALUES (@pseudo, @password);
SELECT numUser, pseudo, password FROM utilisateurs WHERE (numUser = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@pseudo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pseudo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT numUser, pseudo, password FROM dbo.utilisateurs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[utilisateurs] SET [pseudo] = @pseudo, [password] = @password WHERE (([numUser] = @Original_numUser) AND ([pseudo] = @Original_pseudo) AND ([password] = @Original_password));
SELECT numUser, pseudo, password FROM utilisateurs WHERE (numUser = @numUser)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@pseudo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pseudo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_numUser" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="numUser" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_pseudo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pseudo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="numUser" ColumnName="numUser" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numUser" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numUser" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="numUser" DataSetColumn="numUser" />
              <Mapping SourceColumn="pseudo" DataSetColumn="pseudo" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet1" msprop:Generator_UserDSName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="utilisateurs" msprop:Generator_TableClassName="utilisateursDataTable" msprop:Generator_TableVarName="tableutilisateurs" msprop:Generator_TablePropName="utilisateurs" msprop:Generator_RowDeletingName="utilisateursRowDeleting" msprop:Generator_RowChangingName="utilisateursRowChanging" msprop:Generator_RowEvHandlerName="utilisateursRowChangeEventHandler" msprop:Generator_RowDeletedName="utilisateursRowDeleted" msprop:Generator_UserTableName="utilisateurs" msprop:Generator_RowChangedName="utilisateursRowChanged" msprop:Generator_RowEvArgName="utilisateursRowChangeEvent" msprop:Generator_RowClassName="utilisateursRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="numUser" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnnumUser" msprop:Generator_ColumnPropNameInRow="numUser" msprop:Generator_ColumnPropNameInTable="numUserColumn" msprop:Generator_UserColumnName="numUser" type="xs:int" />
              <xs:element name="pseudo" msprop:Generator_ColumnVarNameInTable="columnpseudo" msprop:Generator_ColumnPropNameInRow="pseudo" msprop:Generator_ColumnPropNameInTable="pseudoColumn" msprop:Generator_UserColumnName="pseudo">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:utilisateurs" />
      <xs:field xpath="mstns:numUser" />
    </xs:unique>
  </xs:element>
</xs:schema>